apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.scmspain.karyon'
archivesBaseName = 'karyon-rest-router'
version = '1.2'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile ('org.powermock:powermock-api-mockito:1.6.2') {
        // this mockito package includes an embedded hamcrest
        exclude group: "org.mockito", module: "mockito-all"
    }
    // mockito without hamcrest embedded
    testCompile "org.mockito:mockito-core:1.10.19"
    // hamcrest and additional matchers
    testCompile 'org.hamcrest:hamcrest-integration:1.3'
    testCompile 'org.hamcrest:hamcrest-generator:1.3'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    testCompile 'com.sun.jersey:jersey-core:1.19'
    testCompile 'com.netflix.karyon:karyon2-archaius:2.7.1'
    testCompile 'com.tngtech.java:junit-dataprovider:1.10.0'
    compile 'com.netflix.karyon:karyon2-core:2.5.1'
    compile 'com.netflix.karyon:karyon2-governator:2.5.1'
    compile 'org.reflections:reflections:0.9.9'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required = false
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: hasProperty('ossrhUsername')?ossrhUsername:'', password: hasProperty('ossrhPassword')?ossrhPassword:'')
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: hasProperty('ossrhUsername')?ossrhUsername:'', password: hasProperty('ossrhPassword')?ossrhPassword:'')
            }

            pom.project {
                name 'com.scmspain.karyon:karyon-rest-router'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Module for manage endpoints REST in Karyon framework'
                url 'https://github.com/scm-spain/karyon-rest-router'

                scm {
                    connection 'scm:git@github.com:scm-spain/karyon-rest-router.git'
                    developerConnection 'scm:git@github.com:scm-spain/karyon-rest-router.git'
                    url 'https://github.com/scm-spain/karyon-rest-router'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'victuxbb'
                        name 'Victor Caldentey'
                        email 'victor.caldentey@scmspain.com'
                        organization 'SCM Spain'
                        organizationUrl 'http://www.scmspain.com/'
                    }
                }
            }
        }
    }
}